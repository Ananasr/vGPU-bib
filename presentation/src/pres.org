#+TITLE: Virtualisation de GPU
#+AUTHOR: Hedi Nasr
#+EMAIL: hedi.nasr@etu.univ-lyon1.fr
#+LANGUAGE: fr

#+STARTUP: beamer
#+OPTIONS: H:2
#+LATEX_CLASS: beamer
#+COLUMNS: %45ITEM %10BEAMER_env(Env) %10BEAMER_act(Act) %4BEAMER_col(Col) %8BEAMER_opt(Opt)
#+BEAMER_THEME: Madrid
#+BEAMER_COLOR_THEME:
#+BEAMER_FONT_THEME:
#+BEAMER_INNER_THEME:
#+BEAMER_OUTER_THEME:
#+BEAMER_HEADER:

# L'idée général de la présentation n'est pas de présenter en détail les
# techniques de virtualisations de GPU, ni de faire un résumé de la recherche
# bibliographique, mais plûtot d'expliquer pourquoi le GPU est un élément
# indispensable pour le HPC de manière général. 
# Il s'agira aussi d'expliquer (dans un deuxième point) un élément capital
# dans la virtualisation de GPU : l'IOMMU / VT-D

* Introduction
  # Faire un rappel sur le contexte actuelle qui à mené à faire une recherche
  # sur le sujet. Prendre ensuite du recul par rapport au contexte
  # pour avoir une vue plus générale.
** Contexte
   École Normale Supérieure, 13 000 vidéos, cluster OAR.
** De manière plus générale
   Les applications d'aujourd'hui sont de plus en plus des applications
   multimédias (audio, vidéo, jeu-vidéo)
* Objectifs
** Gain en performance
   Amélioration des performances du processus de transcodage vidéo.
** Faible coût
   Montrer qu'avec un faible investissement, on obtient des performances de
   l'ordre de 2 à 100 fois par rapport au CPU classique.
* Solutions
** GPU
   Comment et pourquoi l'utilisation des GPUs peut-elle améliorer
   les performances de transcodage?
   |                   | CPU               | GPU   |
   |-------------------+-------------------+-------|
   | Nombre de threads | quelques dizaines | > 10K |
** Architecture du GPU
*** GDDR
** Mémoire du GPU
* 
* Environnement
  # On détaillera dans cette partie l'architecture répartis du
  # cluster de calculs pour le transcodage vidéo.
  # On proposera, par la suite, les techniques de virtualisations de GPU
  # les plus adaptés à notre archi.
** Xen
** OAR
* Techniques de virtualisation de GPU
** Direct pass-through
   Instructions IOMMU et VT-D.
   Performances natives du GPU.
   Tous les hyperviseurs proposent cette méthode.
** API Interception
* 
* Questions ?
